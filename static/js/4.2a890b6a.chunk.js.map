{"version":3,"sources":["components/weather/city-search.styles.ts","components/weather/city-search.tsx","components/weather/forecast-graph.styles.ts","components/weather/graph-tooltip.styles.ts","components/weather/graph-tooltip.tsx","components/weather/forecast-graph.tsx","components/weather/tab-controls.tsx","components/weather/current-weather.styles.ts","components/icons/rain.tsx","components/icons/sunrise.tsx","components/icons/sunset.tsx","utils/angle.ts","components/weather/current-weather.tsx","services/geolocation/index.ts","containers/weather/weather-forecast.styles.ts","redux/selectors/weather/index.ts","containers/weather/weather-forecast.tsx","containers/pages/home/home-page.styles.tsx","containers/pages/home/home-page.tsx"],"names":["makeStyles","theme","createStyles","loadingIcon","padding","spacing","iconButton","color","palette","primary","main","CitySearch","props","classes","useStyles","onSubmit","onSearch","TextField","fullWidth","id","label","placeholder","error","errorMessage","helperText","value","onChange","variant","InputProps","endAdornment","InputAdornment","position","Tooltip","title","geolocationAvailable","IconButton","disabled","aria-label","onClick","onGetLocation","className","searching","CircularProgress","size","component","type","legendLabel","textTransform","errorContainer","display","flexDirection","justifyContent","alignItems","width","height","container","minTemperatureLabel","blue","maxTemperatureLabel","amber","divider","marginTop","marginBottom","formatName","name","GraphTooltip","active","payload","Paper","elevation","Typography","Divider","Math","round","ForecastGraph","memo","data","loading","hasError","minFillColor","maxFillColor","gutterBottom","length","margin","right","tickFormatter","slice","dataKey","content","formatter","y","strokeDasharray","fill","displayName","TabControls","Tabs","currentTab","onTabChange","indicatorColor","textColor","largeScreen","centered","Tab","aria-controls","currentWeatherDisabled","sunriseSunsetContainer","sunriseIcon","sunsetIcon","weatherContainer","weatherDescription","weatherIcon","windDirectionIcon","windDeg","transform","RainIcon","Icon","style","viewBox","d","SunriseIcon","SunsetIcon","invertDirection","angle","factor","abs","floor","normalizeAngle","formatTemperature","temperature","toString","CurrentWeather","invertedAngle","useMemo","Grid","item","xs","md","lg","xl","direction","justify","date","alt","src","feelsLike","align","sunrise","sunset","List","ListItem","ListItemIcon","ListItemText","pressure","secondary","humidity","clouds","uvIndex","visibility","rain","Fragment","snow","windSpeed","getCurrentLocation","a","geolocationApi","lat","lng","searchResult","location","display_name","coordinates","searchContainer","graphContainer","chart","breakpoints","down","up","currentWeatherSelector","createSelector","state","weather","current","currentWeather","icon","description","DateTime","fromMillis","toLocaleString","DATETIME_FULL","TIME_24_SIMPLE","getWeatherIcon","WeatherForecast","useState","navigator","geolocation","isGeolocationAvailable","setGeolocationAvailability","searchValue","setSearchValue","setCurrentTab","useSelector","isLoading","forecast","snackbar","useContext","SnackbarContext","dispatch","useDispatch","useTheme","isLargeScreen","useMediaQuery","useEffect","handleChange","useCallback","event","currentTarget","handleSearch","preventDefault","fetchWeatherForecast","handleGeopositionRetrieval","result","message","isAxiosError","handleTabChange","handleChangeIndex","index","axis","onChangeIndex","aria-labelledby","dir","wrapperProps","pageContainer","minHeight","row","textAlign","paddingLeft","paddingRight","fontSize","HomePage","sm"],"mappings":"mYAGeA,eAAW,SAACC,GAAD,OACzBC,YAAa,CACZC,YAAa,CACZC,QAASH,EAAMI,QAAQ,MAExBC,WAAY,CACXC,MAAON,EAAMO,QAAQC,QAAQC,WCYnBC,EAAyC,SAACC,GACtD,IAAMC,EAAUC,IAEhB,OACC,0BAAMC,SAAUH,EAAMI,UACrB,kBAACC,EAAA,EAAD,CACCC,WAAS,EACTC,GAAG,cACHC,MAAM,cACNC,YAAY,uBACZC,QAASV,EAAMW,aACfC,WAAYZ,EAAMW,aAClBE,MAAOb,EAAMa,MACbC,SAAUd,EAAMc,SAChBC,QAAQ,WACRC,WAAY,CACXC,aACC,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACxB,kBAACC,EAAA,EAAD,CAASC,MAAOrB,EAAMsB,qBAAuB,uBAAyB,gCACrE,8BACC,kBAACC,EAAA,EAAD,CACCC,UAAWxB,EAAMsB,qBACjBG,aAAW,uBACXC,QAAS1B,EAAM2B,cACfC,UAAW3B,EAAQP,YAElBM,EAAMsB,qBAAuB,kBAAC,IAAD,MAAc,kBAAC,IAAD,SAI9CtB,EAAM6B,UACN,kBAACC,EAAA,EAAD,CAAkBF,UAAW3B,EAAQV,YAAawC,KAAM,KAExD,kBAACX,EAAA,EAAD,CAASC,MAAM,UACd,8BACC,kBAACE,EAAA,EAAD,CACCC,UAAWxB,EAAMa,MACjBe,UAAW3B,EAAQP,WACnBsC,UAAU,SACVC,KAAK,SACLR,aAAW,UAEX,kBAAC,IAAD,e,qDC7DIrC,eAAW,kBACzBE,YAAa,CACZ4C,YAAa,CACZC,cAAe,cAEhBC,eAAgB,CACfC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,OACPC,OAAQ,a,SCTItD,eAAW,SAACC,GAAD,OACzBC,YAAa,CACZqD,UAAW,CACVnD,QAASH,EAAMI,WAEhBmD,oBAAqB,CACpBjD,MAAOkD,IAAK,MAEbC,oBAAqB,CACpBnD,MAAOoD,IAAM,MAEdC,QAAS,CACRC,UAAW5D,EAAMI,QAAQ,IACzByD,aAAc7D,EAAMI,gBCVjB0D,EAAa,SAACC,GAAD,MAAoC,mBAATA,EAA4B,kBAAoB,mBAEjFC,EAAuC,SAACrD,GACpD,IAAMC,EAAUC,IAEhB,OAAKF,EAAMsD,QAAWtD,EAAMuD,QAK3B,kBAACC,EAAA,EAAD,CAAO5B,UAAW3B,EAAQ0C,UAAWc,UAAW,GAC/C,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,MAAMf,EAAMQ,OAChC,kBAACmD,EAAA,EAAD,CAAS/B,UAAW3B,EAAQ+C,UAC5B,kBAACU,EAAA,EAAD,CAAY9B,UAAW3B,EAAQ2C,qBAC7BO,EAAWnD,EAAMuD,QAAQ,GAAGH,MAD9B,KACuCpD,EAAMuD,QAAQ,GAAG1C,MAAQ,EAAI,IAAM,GACxE+C,KAAKC,OAAO7D,EAAMuD,QAAQ,GAAG1C,QAE/B,kBAAC6C,EAAA,EAAD,CAAY9B,UAAW3B,EAAQ6C,qBAC7BK,EAAWnD,EAAMuD,QAAQ,GAAGH,MAD9B,KACuCpD,EAAMuD,QAAQ,GAAG1C,MAAQ,EAAI,IAAM,GACxE+C,KAAKC,OAAO7D,EAAMuD,QAAQ,GAAG1C,SAbzB,MCiBIiD,EAA+CC,gBAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,KAA8C,IAAxCC,eAAwC,aAAvBC,gBAAuB,SAC3GjE,EAAUC,IACViE,EAAetB,IAAK,KACpBuB,EAAerB,IAAM,KAE3B,OAAImB,EAEF,kBAAC,IAAD,CAAkBD,QAASA,GAC1B,yBAAKrC,UAAW3B,EAAQmC,gBACvB,kBAACsB,EAAA,EAAD,CAAY3C,QAAQ,KAAKiB,UAAU,OAAOqC,cAAY,GAAtD,SAGA,kBAACX,EAAA,EAAD,yDAMgB,IAAhBM,EAAKM,OAEP,kBAAC,IAAD,CAAkBL,QAASA,GAC1B,yBAAKrC,UAAW3B,EAAQmC,gBACvB,kBAACsB,EAAA,EAAD,CAAY3C,QAAQ,KAAKiB,UAAU,OAAOqC,cAAY,GAAtD,YAGA,kBAACX,EAAA,EAAD,+EACwE,kBAAC,IAAD,MADxE,aASH,kBAAC,IAAD,CAAkBO,QAASA,GAC1B,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUD,KAAMA,EAAMO,OAAQ,CAAEC,MAAO,KACtC,kBAAC,IAAD,CAAOC,cAAe,SAAC5D,GAAD,OAAWA,EAAM6D,MAAM,EAAG,IAAIC,QAAQ,cAC5D,kBAAC,IAAD,CAAOF,cAAe,SAAC5D,GAAD,gBAAcA,EAAQ,EAAI,IAAM,IAAhC,OAAqCA,EAArC,WACtB,kBAAC,IAAD,CAAS+D,QAAS,kBAAC,EAAD,QAClB,kBAAC,IAAD,CACCC,UAAW,SAAChE,GAAD,OACV,0BAAMe,UAAW3B,EAAQiC,aAAwB,mBAAVrB,EAA6B,MAAQ,UAG9E,kBAAC,IAAD,CAAeiE,EAAG,IAClB,kBAAC,IAAD,CAAeC,gBAAgB,SAC/B,kBAAC,IAAD,CAAKJ,QAAQ,iBAAiBK,KAAMb,IACpC,kBAAC,IAAD,CAAKQ,QAAQ,iBAAiBK,KAAMZ,UAOzCN,EAAcmB,YAAc,gB,sBC1EfC,EAA2C,SAAClF,GAAD,OACvD,kBAACmF,EAAA,EAAD,CACCtE,MAAOb,EAAMoF,WACbtE,SAAUd,EAAMqF,YAChBC,eAAe,UACfC,UAAU,UACVxE,QAASf,EAAMwF,YAAc,WAAa,YAC1CC,SAAUzF,EAAMwF,YAChB/D,aAAW,kEAEX,kBAACiE,EAAA,EAAD,CAAKlF,MAAM,WAAWD,GAAG,eAAeoF,gBAAc,iBAAiBlE,aAAW,iBAClF,kBAACiE,EAAA,EAAD,CACClE,SAAUxB,EAAM4F,uBAChBpF,MAAM,kBACND,GAAG,sBACHoF,gBAAc,wBACdlE,aAAW,0B,2BCzBCrC,cAAW,CACzByG,uBAAwB,CACvBpD,MAAO,OACPJ,QAAS,OACTE,eAAgB,gBAEjBuD,YAAa,CACZnG,MAAO,WAERoG,WAAY,CACXpG,MAAO,WAERqG,iBAAkB,CACjB3D,QAAS,OACTE,eAAgB,SAChBC,WAAY,UAEbyD,mBAAoB,CACnB5D,QAAS,eACTF,cAAe,cAEhB+D,YAAa,CACZ7D,QAAS,gBAEV8D,kBAAmB,SAACC,GAAD,MAAsB,CACxCC,UAAU,UAAD,OAAYD,EAAZ,Y,yLCbIE,GAXuB,SAACtG,GAAD,OACrC,kBAACuG,GAAA,EAASvG,EACT,yBAAKwG,MAAO,CAAE/D,MAAO,GAAIC,OAAQ,IAAM+D,QAAQ,aAC9C,0BACCzB,KAAK,eACL0B,EAAE,u5BCMSC,GAX0B,SAAC3G,GAAD,OACxC,kBAACuG,GAAA,EAASvG,EACT,yBAAKwG,MAAO,CAAE/D,MAAO,GAAIC,OAAQ,IAAM+D,QAAQ,aAC9C,0BACCzB,KAAK,eACL0B,EAAE,8nBCMSE,GAXyB,SAAC5G,GAAD,OACvC,kBAACuG,GAAA,EAASvG,EACT,yBAAKwG,MAAO,CAAE/D,MAAO,GAAIC,OAAQ,IAAM+D,QAAQ,aAC9C,0BACCzB,KAAK,eACL0B,EAAE,ioBCIOG,GAAkB,SAACC,GAAD,OAZD,SAACA,GAC9B,IAAMC,EAASnD,KAAKoD,IAAIpD,KAAKqD,MAAMH,EAAQ,MAE3C,OAAIA,EAAQ,EACJ,IAAMC,EAASD,EACZA,GAAS,IACZA,EAAQ,IAAMC,EAGfD,EAGkDI,CAAeJ,EAAQ,MC6B3EK,GAAoB,SAACC,GAAD,OACzBA,EAAc,EAAd,WAAsBxD,KAAKC,MAAMuD,IAAiBxD,KAAKC,MAAMuD,GAAaC,SAAS,KAsBvEC,GAAiDvD,gBAAK,SAAC/D,GACnE,IArBiCoG,EAqB3BmB,EAAgBC,mBAAQ,kBAAMX,GAAgB7G,EAAMoG,WAAU,CAACpG,EAAMoG,UACrEnG,EAAUC,EAAUqH,GAE1B,OACC,kBAACE,EAAA,EAAD,CAAM9E,WAAS,GACd,kBAAC8E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpC,kBAACL,EAAA,EAAD,CAAM9E,WAAS,EAACoF,UAAU,SAASC,QAAQ,SAASxF,WAAW,UAC9D,kBAACkB,EAAA,EAAD,KAAa1D,EAAMiI,MACnB,0BAAMrG,UAAW3B,EAAQ+F,kBACxB,yBAAKpE,UAAW3B,EAAQiG,YAAagC,IAAKlI,EAAMiG,mBAAoBkC,IAAKnI,EAAMkG,cAC/E,kBAACxC,EAAA,EAAD,CAAY9B,UAAW3B,EAAQgG,mBAAoBlF,QAAQ,MACzDf,EAAMiG,qBAGT,kBAACvC,EAAA,EAAD,CAAYW,cAAY,EAACtD,QAAQ,MAC/BoG,GAAkBnH,EAAMoH,aAD1B,QAGA,kBAAC1D,EAAA,EAAD,CAAYW,cAAY,EAACtD,QAAQ,MAAjC,eACcoG,GAAkBnH,EAAMoI,WADtC,QAGA,kBAAC1E,EAAA,EAAD,CAAYW,cAAY,EAACrC,UAAU,OAAOJ,UAAW3B,EAAQ4F,wBAC5D,kBAACnC,EAAA,EAAD,CAAY2E,MAAM,SAAStH,QAAQ,KAAKsB,QAAQ,UAC/C,kBAAC,GAAD,CAAaT,UAAW3B,EAAQ6F,cADjC,eAC6D9F,EAAMsI,SAEnE,kBAAC5E,EAAA,EAAD,CAAY2E,MAAM,SAAStH,QAAQ,KAAKsB,QAAQ,UAC/C,kBAAC,GAAD,CAAYT,UAAW3B,EAAQ8F,aADhC,cAC0D/F,EAAMuI,WAKnE,kBAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpC,kBAACU,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAM4I,SAAX,QAA2BC,UAAU,0BAE3D,kBAAClF,EAAA,EAAD,MACA,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAM8I,SAAX,MAAyBD,UAAU,cAEzD,kBAAClF,EAAA,EAAD,MACA,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAM+I,OAAX,MAAuBF,UAAU,YAEvD,kBAAClF,EAAA,EAAD,MACA,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAASG,EAAMgJ,QAASH,UAAU,qBAEjD,kBAAClF,EAAA,EAAD,MACA,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAMiJ,WAAX,MAA2BJ,UAAU,gBAE3D,kBAAClF,EAAA,EAAD,MACC3D,EAAMkJ,MACN,kBAAC,IAAMC,SAAP,KACC,kBAACV,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,GAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAMkJ,KAAX,OAAsBL,UAAU,sBAEtD,kBAAClF,EAAA,EAAD,OAGD3D,EAAMoJ,MACN,kBAAC,IAAMD,SAAP,KACC,kBAACV,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAMoJ,KAAX,OAAsBP,UAAU,sBAEtD,kBAAClF,EAAA,EAAD,OAGF,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,OAED,kBAACC,EAAA,EAAD,CAAc9I,QAAO,UAAKG,EAAMqJ,UAAX,QAA4BR,UAAU,gBAE5D,kBAAClF,EAAA,EAAD,MACA,kBAAC8E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,KAAD,CAAiB9G,UAAW3B,EAAQkG,qBAErC,kBAACwC,EAAA,EAAD,CAAc9I,SAzHcuG,EAyHoBmB,EAxHjDnB,EAAU,OAASA,GAAW,KAC1B,QACGA,EAAU,MAAQA,GAAW,KAChC,aACGA,EAAU,MAAQA,GAAW,MAChC,OACGA,EAAU,OAASA,GAAW,MACjC,aACGA,EAAU,OAASA,GAAW,MACjC,QACGA,EAAU,OAASA,GAAW,MACjC,aACGA,EAAU,OAASA,GAAW,MACjC,OAGD,cAwG8DyC,UAAU,0BAQhFvB,GAAerC,YAAc,iB,sBClJhBqE,GAAkB,uCAAG,oCAAAC,EAAA,sEACRC,OADQ,0CAC1BC,EAD0B,KACrBC,EADqB,cAENF,KAA6BC,EAAKC,GAF5B,cAE3BC,EAF2B,yBAI1B,CACNC,SAAUD,EAAa3F,KAAK6F,aAC5BC,YAAa,CAAEL,MAAKC,SANY,4CAAH,qD,SCzBhBtK,gBAAW,SAACC,GAAD,aACzBC,YAAa,CACZyK,gBAAiB,CAChBxF,OAAQlF,EAAMI,WAEfuK,eAAgB,CACfxK,QAASH,EAAMI,UACf8E,OAAQlF,EAAMI,WAEfwK,OAAK,oBACH5K,EAAM6K,YAAYC,KAAK,MAAQ,CAC/BzH,OAAQ,MAFL,eAIHrD,EAAM6K,YAAYE,GAAG,MAAQ,CAC7B1H,OAAQ,MALL,eAOHrD,EAAM6K,YAAYE,GAAG,MAAQ,CAC7B1H,OAAQ,MARL,Q,6CCHM2H,GAAyBC,cAFd,SAACC,GAAD,OAAgDA,EAAMC,QAAQC,WAEhB,SAACC,GACtE,GAAuB,OAAnBA,EACH,OAAOA,EAFiF,MAQrFA,EAFHF,QAAWG,EAN6E,EAM7EA,KAAMC,EANuE,EAMvEA,YACdJ,EAPqF,aAQrFE,EARqF,aAUzF,OAAO,6BACHF,GADJ,IAECvC,KAAM4C,YAASC,WAAWN,EAAQvC,MAAM8C,eAAeF,YAASG,eAChE1C,QAASuC,YAASC,WAAWN,EAAQlC,SAASyC,eAAeF,YAASI,gBACtE1C,OAAQsC,YAASC,WAAWN,EAAQjC,QAAQwC,eAAeF,YAASI,gBACpEhF,mBAAoB2E,EACpB1E,YAAagF,aAAeP,QCRjBQ,GAA4B,WACxC,IAAMlL,EAAUC,KAD8B,EAEekL,qBAAWC,UAAUC,aAFpC,mBAEvCC,EAFuC,KAEfC,EAFe,OAGRJ,mBAAS,IAHD,mBAGvCK,EAHuC,KAG1BC,EAH0B,OAIVN,mBAAS,GAJC,mBAIvChG,EAJuC,KAI3BuG,EAJ2B,OAKAC,aAAsC,SAACrB,GAAD,OAAWA,EAAMC,WAA7FqB,EALsC,EAKtCA,UAAWC,EAL2B,EAK3BA,SAAUnL,EALiB,EAKjBA,aACvB+J,EAAiBkB,YAAYvB,IAC3B0B,EAAaC,qBAA6BC,KAA1CF,SACFG,EAAWC,cACX9M,EAAQ+M,cACRC,EAAgBC,YAAcjN,EAAM6K,YAAYE,GAAG,OAEzDmC,qBAAU,WACL5L,GACHoL,EAASrL,MAAMC,KAEd,CAACoL,EAAUpL,IAEd,IAAM6L,EAAeC,uBAAY,SAACC,GACjChB,EAAegB,EAAMC,cAAc9L,SACjC,IAEG+L,EAAeH,uBACpB,SAACC,GACAA,EAAMG,iBAENX,EAASY,aAAqBrB,MAE/B,CAACS,EAAUT,IAGNsB,EAA6BN,sBAAW,sBAAC,4BAAAlD,EAAA,+EAExBD,KAFwB,OAEvC0D,EAFuC,OAI7CtB,EAAesB,EAAOpD,UAJuB,gDAM7CmC,EAASrL,MAAM,KAAEuM,SAEZ,KAAEC,cACN1B,GAA2B,GATiB,yDAY5C,CAACO,IAEEoB,EAAkBV,uBAAY,SAACC,EAAmC7L,GACvE8K,EAAc9K,KACZ,IAEGuM,EAAoBX,uBAAY,SAACY,GACtC1B,EAAc0B,KACZ,IAEH,OACC,kBAAC,WAAD,KACC,yBAAKzL,UAAW3B,EAAQ8J,iBACvB,kBAACtC,EAAA,EAAD,CAAM9E,WAAS,GACd,kBAAC8E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACd,kBAAC,EAAD,CACC9G,MAAO4K,EACP5J,UAAWgK,EACXvK,qBAAsBiK,EACtB5K,aAAcA,EACdG,SAAU0L,EACVpM,SAAUwM,EACVjL,cAAeoL,OAKnB,kBAACvJ,EAAA,EAAD,CAAO5B,UAAW3B,EAAQ+J,eAAgBvG,UAAW,GACpD,kBAACgE,EAAA,EAAD,CAAM9E,WAAS,GACd,kBAAC8E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACd,kBAAC,EAAD,CACC/B,uBAA2C,OAAnB8E,EACxBtF,WAAYA,EACZC,YAAa8H,EACb3H,YAAa6G,IAEd,kBAAC,IAAD,CACCiB,KAA0B,QAApBjO,EAAM0I,UAAsB,YAAc,IAChDsF,MAAOjI,EACPmI,cAAeH,GAEf,kBAAC,IAAD,CACC7M,GAAG,iBACHiN,kBAAgB,eAChB3M,MAAOuE,EACPiI,MAAO,EACPI,IAAKpO,EAAM0I,UACX2F,aAAc,CACb9L,UAAW3B,EAAQgK,QAGpB,kBAACnG,EAAD,CAAeE,KAAM8H,EAAU7H,QAAS4H,EAAW3H,WAAYvD,KAEhE,kBAAC,IAAD,CACCJ,GAAG,wBACHiN,kBAAgB,sBAChB3M,MAAOuE,EACPiI,MAAO,EACPI,IAAKpO,EAAM0I,WAEV2C,GAAkB,kBAACpD,GAAmBoD,UCrHhCtL,gBAAW,SAACC,GAAD,YAAmB,CAC5CsO,cAAe,CACdrL,cAAe,SACfG,MAAO,OACPmL,UAAW,QACXrL,eAAgB,UAEjBsL,IAAK,CACJtL,eAAgB,SAChBC,WAAY,UAEbnB,OAAK,GACJyM,UAAW,SACXC,YAAa1O,EAAMI,UACnBuO,aAAc3O,EAAMI,WAHhB,eAIHJ,EAAM6K,YAAYC,KAAK,MAAQ,CAC/B8D,SAAU,WALP,eAOH5O,EAAM6K,YAAYC,KAAK,MAAQ,CAC/B8D,SAAU,SARP,eAUH5O,EAAM6K,YAAYC,KAAK,MAAQ,CAC/B8D,SAAU,YAXP,eAaH5O,EAAM6K,YAAYC,KAAK,MAAQ,CAC/B8D,SAAU,WAdP,OCcSC,UArBY,WAC1B,IAAMjO,EAAUC,KAEhB,OACC,kBAACuH,EAAA,EAAD,CAAM9E,WAAS,EAACf,UAAW3B,EAAQ0N,eAClC,kBAAClG,EAAA,EAAD,CAAM9E,WAAS,EAACf,UAAW3B,EAAQ4N,KAClC,kBAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGuG,GAAI,GAAIxG,GAAI,IAC7B,kBAACjE,EAAA,EAAD,CAAY9B,UAAW3B,EAAQoB,MAAON,QAAQ,MAA9C,4BAKF,kBAAC0G,EAAA,EAAD,CAAM9E,WAAS,EAACf,UAAW3B,EAAQ4N,KAClC,kBAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGuG,GAAI,GAAIxG,GAAI,IAC7B,kBAAC,GAAD","file":"static/js/4.2a890b6a.chunk.js","sourcesContent":["import { Theme } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tloadingIcon: {\n\t\t\tpadding: theme.spacing(1.5),\n\t\t},\n\t\ticonButton: {\n\t\t\tcolor: theme.palette.primary.main,\n\t\t},\n\t}),\n);\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GpsIcon from \"@material-ui/icons/GpsFixed\";\nimport GpsOffIcon from \"@material-ui/icons/GpsOff\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"@components/weather/city-search.styles\";\n\nexport interface ICitySearchProps {\n\tvalue: string;\n\tsearching: boolean;\n\tgeolocationAvailable: boolean;\n\terrorMessage?: string;\n\tonChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\tonSearch: (event: React.FormEvent<HTMLFormElement>) => void | Promise<void>;\n\tonGetLocation: () => void | Promise<void>;\n}\n\nexport const CitySearch: React.FC<ICitySearchProps> = (props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form onSubmit={props.onSearch}>\n\t\t\t<TextField\n\t\t\t\tfullWidth\n\t\t\t\tid=\"city-search\"\n\t\t\t\tlabel=\"Search city\"\n\t\t\t\tplaceholder=\"Enter city to search\"\n\t\t\t\terror={!!props.errorMessage}\n\t\t\t\thelperText={props.errorMessage}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t<Tooltip title={props.geolocationAvailable ? \"Use current location\" : \"Geolocation is not available\"}>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\tdisabled={!props.geolocationAvailable}\n\t\t\t\t\t\t\t\t\t\taria-label=\"get current location\"\n\t\t\t\t\t\t\t\t\t\tonClick={props.onGetLocation}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.iconButton}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{props.geolocationAvailable ? <GpsIcon /> : <GpsOffIcon />}\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t{props.searching ? (\n\t\t\t\t\t\t\t\t<CircularProgress className={classes.loadingIcon} size={24} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Tooltip title=\"Search\">\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!props.value}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.iconButton}\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"button\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() =>\n\tcreateStyles({\n\t\tlegendLabel: {\n\t\t\ttextTransform: \"capitalize\",\n\t\t},\n\t\terrorContainer: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"column\",\n\t\t\tjustifyContent: \"center\",\n\t\t\talignItems: \"center\",\n\t\t\twidth: \"100%\",\n\t\t\theight: \"100%\",\n\t\t},\n\t}),\n);\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nexport default makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tcontainer: {\n\t\t\tpadding: theme.spacing(),\n\t\t},\n\t\tminTemperatureLabel: {\n\t\t\tcolor: blue[600],\n\t\t},\n\t\tmaxTemperatureLabel: {\n\t\t\tcolor: amber[900],\n\t\t},\n\t\tdivider: {\n\t\t\tmarginTop: theme.spacing(0.5),\n\t\t\tmarginBottom: theme.spacing(),\n\t\t},\n\t}),\n);\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TooltipProps } from \"recharts\";\nimport { Divider } from \"@material-ui/core\";\nimport useStyles from \"@components/weather/graph-tooltip.styles\";\n\nconst formatName = (name: string): string => (name === \"maxTemperature\" ? \"Max Temperature\" : \"Min Temperature\");\n\nexport const GraphTooltip: React.FC<TooltipProps> = (props) => {\n\tconst classes = useStyles();\n\n\tif (!props.active || !props.payload) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Paper className={classes.container} elevation={4}>\n\t\t\t<Typography variant=\"h6\">{props.label}</Typography>\n\t\t\t<Divider className={classes.divider} />\n\t\t\t<Typography className={classes.minTemperatureLabel}>\n\t\t\t\t{formatName(props.payload[0].name)}: {props.payload[0].value > 0 ? \"+\" : \"\"}\n\t\t\t\t{Math.round(+props.payload[0].value)}\n\t\t\t</Typography>\n\t\t\t<Typography className={classes.maxTemperatureLabel}>\n\t\t\t\t{formatName(props.payload[1].name)}: {props.payload[1].value > 0 ? \"+\" : \"\"}\n\t\t\t\t{Math.round(+props.payload[1].value)}\n\t\t\t</Typography>\n\t\t</Paper>\n\t);\n};\n","import React, { memo } from \"react\";\nimport {\n\tBarChart,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tLegend,\n\tTooltip,\n\tResponsiveContainer,\n\tCartesianGrid,\n\tReferenceLine,\n} from \"recharts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { LoadingComponent } from \"@components/common\";\nimport useStyles from \"@components/weather/forecast-graph.styles\";\nimport { GraphTooltip } from \"@src/components/weather/graph-tooltip\";\n\nexport interface IForecastGraphProps {\n\tdata: {\n\t\tdayOfWeek: string;\n\t\tminTemperature: number;\n\t\tmaxTemperature: number;\n\t}[];\n\tloading?: boolean;\n\thasError?: boolean;\n}\n\nexport const ForecastGraph: React.FC<IForecastGraphProps> = memo(({ data, loading = false, hasError = false }) => {\n\tconst classes = useStyles();\n\tconst minFillColor = blue[600];\n\tconst maxFillColor = amber[900];\n\n\tif (hasError) {\n\t\treturn (\n\t\t\t<LoadingComponent loading={loading}>\n\t\t\t\t<div className={classes.errorContainer}>\n\t\t\t\t\t<Typography variant=\"h3\" component=\"span\" gutterBottom>\n\t\t\t\t\t\tOops!\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography>An error has occurred while loading graph data</Typography>\n\t\t\t\t</div>\n\t\t\t</LoadingComponent>\n\t\t);\n\t}\n\n\tif (data.length === 0) {\n\t\treturn (\n\t\t\t<LoadingComponent loading={loading}>\n\t\t\t\t<div className={classes.errorContainer}>\n\t\t\t\t\t<Typography variant=\"h3\" component=\"span\" gutterBottom>\n\t\t\t\t\t\tNo data!\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tTo display forecast graph enter your city name in search field and hit <SearchIcon /> button\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t</LoadingComponent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<LoadingComponent loading={loading}>\n\t\t\t<ResponsiveContainer>\n\t\t\t\t<BarChart data={data} margin={{ right: 16 }}>\n\t\t\t\t\t<XAxis tickFormatter={(value) => value.slice(0, 3)} dataKey=\"dayOfWeek\" />\n\t\t\t\t\t<YAxis tickFormatter={(value) => `${value > 0 ? \"+\" : \"\"}${value}°`} />\n\t\t\t\t\t<Tooltip content={<GraphTooltip />} />\n\t\t\t\t\t<Legend\n\t\t\t\t\t\tformatter={(value) => (\n\t\t\t\t\t\t\t<span className={classes.legendLabel}>{value === \"minTemperature\" ? \"Min\" : \"Max\"}</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<ReferenceLine y={0} />\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3 \" />\n\t\t\t\t\t<Bar dataKey=\"minTemperature\" fill={minFillColor} />\n\t\t\t\t\t<Bar dataKey=\"maxTemperature\" fill={maxFillColor} />\n\t\t\t\t</BarChart>\n\t\t\t</ResponsiveContainer>\n\t\t</LoadingComponent>\n\t);\n});\n\nForecastGraph.displayName = \"ForecastGraph\";\n","import React from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nexport interface ITabControlsProps {\n\tcurrentTab: number;\n\tonTabChange: (event: React.ChangeEvent<unknown>, value: number) => void;\n\tlargeScreen: boolean;\n\tcurrentWeatherDisabled: boolean;\n}\n\nexport const TabControls: React.FC<ITabControlsProps> = (props) => (\n\t<Tabs\n\t\tvalue={props.currentTab}\n\t\tonChange={props.onTabChange}\n\t\tindicatorColor=\"primary\"\n\t\ttextColor=\"primary\"\n\t\tvariant={props.largeScreen ? \"standard\" : \"fullWidth\"}\n\t\tcentered={props.largeScreen}\n\t\taria-label=\"tabs control to pick between week forecast and current weather\"\n\t>\n\t\t<Tab label=\"Forecast\" id=\"forecast-tab\" aria-controls=\"forecast-panel\" aria-label=\"forecast tab\" />\n\t\t<Tab\n\t\t\tdisabled={props.currentWeatherDisabled}\n\t\t\tlabel=\"Current weather\"\n\t\t\tid=\"current-weather-tab\"\n\t\t\taria-controls=\"current-weather-panel\"\n\t\t\taria-label=\"current weather tab\"\n\t\t/>\n\t</Tabs>\n);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n\tsunriseSunsetContainer: {\n\t\twidth: \"100%\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-evenly\",\n\t},\n\tsunriseIcon: {\n\t\tcolor: \"#EC6E4C\",\n\t},\n\tsunsetIcon: {\n\t\tcolor: \"#EC6E4C\",\n\t},\n\tweatherContainer: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\tweatherDescription: {\n\t\tdisplay: \"inline-block\",\n\t\ttextTransform: \"capitalize\",\n\t},\n\tweatherIcon: {\n\t\tdisplay: \"inline-block\",\n\t},\n\twindDirectionIcon: (windDeg: number) => ({\n\t\ttransform: `rotate(${windDeg}deg)`,\n\t}),\n});\n","import React from \"react\";\nimport Icon, { IconProps } from \"@material-ui/core/Icon\";\n\nconst RainIcon: React.FC<IconProps> = (props) => (\n\t<Icon {...props}>\n\t\t<svg style={{ width: 24, height: 24 }} viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M9,12C9.53,12.14 9.85,12.69 9.71,13.22L8.41,18.05C8.27,18.59 7.72,18.9 7.19,18.76C6.65,18.62 6.34,18.07 6.5,17.54L7.78,12.71C7.92,12.17 8.47,11.86 9,12M13,12C13.53,12.14 13.85,12.69 13.71,13.22L11.64,20.95C11.5,21.5 10.95,21.8 10.41,21.66C9.88,21.5 9.56,20.97 9.7,20.43L11.78,12.71C11.92,12.17 12.47,11.86 13,12M17,12C17.53,12.14 17.85,12.69 17.71,13.22L16.41,18.05C16.27,18.59 15.72,18.9 15.19,18.76C14.65,18.62 14.34,18.07 14.5,17.54L15.78,12.71C15.92,12.17 16.47,11.86 17,12M17,10V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11C3,12.11 3.6,13.08 4.5,13.6V13.59C5,13.87 5.14,14.5 4.87,14.96C4.59,15.43 4,15.6 3.5,15.32V15.33C2,14.47 1,12.85 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12C23,13.5 22.2,14.77 21,15.46V15.46C20.5,15.73 19.91,15.57 19.63,15.09C19.36,14.61 19.5,14 20,13.72V13.73C20.6,13.39 21,12.74 21,12A2,2 0 0,0 19,10H17Z\"\n\t\t\t/>\n\t\t</svg>\n\t</Icon>\n);\n\nexport default RainIcon;\n","import React from \"react\";\nimport Icon, { IconProps } from \"@material-ui/core/Icon\";\n\nconst SunriseIcon: React.FC<IconProps> = (props) => (\n\t<Icon {...props}>\n\t\t<svg style={{ width: 24, height: 24 }} viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M3,12H7A5,5 0 0,1 12,7A5,5 0 0,1 17,12H21A1,1 0 0,1 22,13A1,1 0 0,1 21,14H3A1,1 0 0,1 2,13A1,1 0 0,1 3,12M15,12A3,3 0 0,0 12,9A3,3 0 0,0 9,12H15M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M12.71,16.3L15.82,19.41C16.21,19.8 16.21,20.43 15.82,20.82C15.43,21.21 14.8,21.21 14.41,20.82L12,18.41L9.59,20.82C9.2,21.21 8.57,21.21 8.18,20.82C7.79,20.43 7.79,19.8 8.18,19.41L11.29,16.3C11.5,16.1 11.74,16 12,16C12.26,16 12.5,16.1 12.71,16.3Z\"\n\t\t\t/>\n\t\t</svg>\n\t</Icon>\n);\n\nexport default SunriseIcon;\n","import React from \"react\";\nimport Icon, { IconProps } from \"@material-ui/core/Icon\";\n\nconst SunsetIcon: React.FC<IconProps> = (props) => (\n\t<Icon {...props}>\n\t\t<svg style={{ width: 24, height: 24 }} viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M3,12H7A5,5 0 0,1 12,7A5,5 0 0,1 17,12H21A1,1 0 0,1 22,13A1,1 0 0,1 21,14H3A1,1 0 0,1 2,13A1,1 0 0,1 3,12M15,12A3,3 0 0,0 12,9A3,3 0 0,0 9,12H15M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M12.71,20.71L15.82,17.6C16.21,17.21 16.21,16.57 15.82,16.18C15.43,15.79 14.8,15.79 14.41,16.18L12,18.59L9.59,16.18C9.2,15.79 8.57,15.79 8.18,16.18C7.79,16.57 7.79,17.21 8.18,17.6L11.29,20.71C11.5,20.9 11.74,21 12,21C12.26,21 12.5,20.9 12.71,20.71Z\"\n\t\t\t/>\n\t\t</svg>\n\t</Icon>\n);\n\nexport default SunsetIcon;\n","export const normalizeAngle = (angle: number): number => {\n\tconst factor = Math.abs(Math.floor(angle / 360));\n\n\tif (angle < 0) {\n\t\treturn 360 * factor + angle;\n\t} else if (angle >= 360) {\n\t\treturn angle - 360 * factor;\n\t}\n\n\treturn angle;\n};\n\nexport const invertDirection = (angle: number): number => normalizeAngle(angle + 180);\n","import React, { memo, useMemo } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport useStyles from \"@components/weather/current-weather.styles\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport DownIcon from \"@material-ui/icons/VerticalAlignBottom\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport DropIcon from \"@material-ui/icons/Opacity\";\nimport SunIcon from \"@material-ui/icons/WbSunny\";\nimport SnowIcon from \"@material-ui/icons/AcUnit\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport RainIcon from \"@components/icons/rain\";\nimport SunriseIcon from \"@components/icons/sunrise\";\nimport SunsetIcon from \"@components/icons/sunset\";\nimport { invertDirection } from \"@utils/angle\";\n\nexport interface ICurrentWeatherProps {\n\tdate: string;\n\tsunrise: string;\n\tsunset: string;\n\ttemperature: number;\n\tfeelsLike: number;\n\tpressure: number;\n\thumidity: number;\n\tclouds: number;\n\tuvIndex: number;\n\tvisibility: number;\n\train?: number;\n\tsnow?: number;\n\twindSpeed: number;\n\twindDeg: number;\n\tweatherIcon: string;\n\tweatherDescription: string;\n}\n\nconst formatTemperature = (temperature: number): string =>\n\ttemperature > 0 ? `+${Math.round(temperature)}` : Math.round(temperature).toString(10);\n\nconst getReadableWindDirection = (windDeg: number): string => {\n\tif (windDeg > 337.5 || windDeg <= 22.5) {\n\t\treturn \"North\";\n\t} else if (windDeg > 22.5 && windDeg <= 67.5) {\n\t\treturn \"North-East\";\n\t} else if (windDeg > 67.5 && windDeg <= 112.5) {\n\t\treturn \"East\";\n\t} else if (windDeg > 112.5 && windDeg <= 157.5) {\n\t\treturn \"South-East\";\n\t} else if (windDeg > 157.5 && windDeg <= 202.5) {\n\t\treturn \"South\";\n\t} else if (windDeg > 202.5 && windDeg <= 247.5) {\n\t\treturn \"South-West\";\n\t} else if (windDeg > 247.5 && windDeg <= 292.5) {\n\t\treturn \"West\";\n\t}\n\n\treturn \"North-West\";\n};\n\nexport const CurrentWeather: React.FC<ICurrentWeatherProps> = memo((props) => {\n\tconst invertedAngle = useMemo(() => invertDirection(props.windDeg), [props.windDeg]);\n\tconst classes = useStyles(invertedAngle);\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12} md={5} lg={4} xl={3}>\n\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t<Typography>{props.date}</Typography>\n\t\t\t\t\t<span className={classes.weatherContainer}>\n\t\t\t\t\t\t<img className={classes.weatherIcon} alt={props.weatherDescription} src={props.weatherIcon} />\n\t\t\t\t\t\t<Typography className={classes.weatherDescription} variant=\"h4\">\n\t\t\t\t\t\t\t{props.weatherDescription}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</span>\n\t\t\t\t\t<Typography gutterBottom variant=\"h2\">\n\t\t\t\t\t\t{formatTemperature(props.temperature)}&deg;\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography gutterBottom variant=\"h4\">\n\t\t\t\t\t\tFeels like: {formatTemperature(props.feelsLike)}&deg;\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography gutterBottom component=\"span\" className={classes.sunriseSunsetContainer}>\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h5\" display=\"inline\">\n\t\t\t\t\t\t\t<SunriseIcon className={classes.sunriseIcon} /> Sunrise at {props.sunrise}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h5\" display=\"inline\">\n\t\t\t\t\t\t\t<SunsetIcon className={classes.sunsetIcon} /> Sunset at {props.sunset}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={7} lg={8} xl={9}>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<DownIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={`${props.pressure} hPa`} secondary=\"Atmospheric pressure\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<DropIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={`${props.humidity} %`} secondary=\"Humidity\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<CloudIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={`${props.clouds} %`} secondary=\"Clouds\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<SunIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={props.uvIndex} secondary=\"Midday UV Index\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<VisibilityIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={`${props.visibility} m`} secondary=\"Visibility\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t{props.rain && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<RainIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={`${props.rain} mm`} secondary=\"Rain last 1 hour\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t\t{props.snow && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<SnowIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={`${props.snow} mm`} secondary=\"Snow last 1 hour\" />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<SpeedIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={`${props.windSpeed} m/s`} secondary=\"Wind speed\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<ArrowUpwardIcon className={classes.windDirectionIcon} />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={getReadableWindDirection(invertedAngle)} secondary=\"Wind direction\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n});\n\nCurrentWeather.displayName = \"CurrentWeather\";\n","import * as geolocationApi from \"@utils/geolocation-api\";\n\nexport interface ILatLng {\n\tlat: number;\n\tlng: number;\n}\n\nexport interface ICurrentLocation {\n\tlocation: string;\n\tcoordinates: ILatLng;\n}\n\nexport const getCoordinatesByCity = async (city: string): Promise<ILatLng> => {\n\tconst searchResult = await geolocationApi.search(city);\n\n\tconst coordinates = {\n\t\tlat: +searchResult.data[0].lat,\n\t\tlng: +searchResult.data[0].lon,\n\t};\n\n\tif (isNaN(coordinates.lat) || isNaN(coordinates.lng)) {\n\t\tthrow new Error(\"Failed to retrieve location\");\n\t}\n\n\treturn coordinates;\n};\n\nexport const getCurrentLocation = async (): Promise<ICurrentLocation> => {\n\tconst [lat, lng] = await geolocationApi.getCurrentPosition();\n\tconst searchResult = await geolocationApi.reverseSearch(lat, lng);\n\n\treturn {\n\t\tlocation: searchResult.data.display_name,\n\t\tcoordinates: { lat, lng },\n\t};\n};\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tsearchContainer: {\n\t\t\tmargin: theme.spacing(),\n\t\t},\n\t\tgraphContainer: {\n\t\t\tpadding: theme.spacing(),\n\t\t\tmargin: theme.spacing(),\n\t\t},\n\t\tchart: {\n\t\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\t\theight: 300,\n\t\t\t},\n\t\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\t\theight: 400,\n\t\t\t},\n\t\t\t[theme.breakpoints.up(\"lg\")]: {\n\t\t\t\theight: 500,\n\t\t\t},\n\t\t},\n\t}),\n);\n","import { DateTime } from \"luxon\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport { IAppState } from \"@redux/reducers\";\nimport { IWeatherState } from \"@redux/reducers/weather\";\nimport { getWeatherIcon } from \"@utils/weather-api\";\n\nconst currentSelector = (state: IAppState): IWeatherState[\"current\"] => state.weather.current;\n\nexport const currentWeatherSelector = createSelector(currentSelector, (currentWeather) => {\n\tif (currentWeather === null) {\n\t\treturn currentWeather;\n\t}\n\n\tconst {\n\t\tweather: { icon, description },\n\t\t...weather\n\t} = currentWeather;\n\n\treturn {\n\t\t...weather,\n\t\tdate: DateTime.fromMillis(weather.date).toLocaleString(DateTime.DATETIME_FULL),\n\t\tsunrise: DateTime.fromMillis(weather.sunrise).toLocaleString(DateTime.TIME_24_SIMPLE),\n\t\tsunset: DateTime.fromMillis(weather.sunset).toLocaleString(DateTime.TIME_24_SIMPLE),\n\t\tweatherDescription: description,\n\t\tweatherIcon: getWeatherIcon(icon),\n\t};\n});\n","import React, { Fragment, useState, useCallback, useEffect, useContext } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ISnackbarContext, SnackbarContext } from \"@containers/snackbar\";\nimport { CitySearch, CurrentWeather, ForecastGraph, TabControls } from \"@components/weather\";\nimport { TabPanel } from \"@components/common\";\nimport { IAppState } from \"@redux/reducers\";\nimport { fetchWeatherForecast, IWeatherState } from \"@redux/reducers/weather\";\nimport { getCurrentLocation } from \"@services/geolocation\";\nimport useStyles from \"@containers/weather/weather-forecast.styles\";\nimport { currentWeatherSelector } from \"@src/redux/selectors/weather\";\n\nexport const WeatherForecast: React.FC = () => {\n\tconst classes = useStyles();\n\tconst [isGeolocationAvailable, setGeolocationAvailability] = useState(!!navigator.geolocation);\n\tconst [searchValue, setSearchValue] = useState(\"\");\n\tconst [currentTab, setCurrentTab] = useState(0);\n\tconst { isLoading, forecast, errorMessage } = useSelector<IAppState, IWeatherState>((state) => state.weather);\n\tconst currentWeather = useSelector(currentWeatherSelector);\n\tconst { snackbar } = useContext<ISnackbarContext>(SnackbarContext);\n\tconst dispatch = useDispatch();\n\tconst theme = useTheme();\n\tconst isLargeScreen = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n\tuseEffect(() => {\n\t\tif (errorMessage) {\n\t\t\tsnackbar.error(errorMessage);\n\t\t}\n\t}, [snackbar, errorMessage]);\n\n\tconst handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n\t\tsetSearchValue(event.currentTarget.value);\n\t}, []);\n\n\tconst handleSearch = useCallback(\n\t\t(event: React.FormEvent<HTMLFormElement>) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tdispatch(fetchWeatherForecast(searchValue));\n\t\t},\n\t\t[dispatch, searchValue],\n\t);\n\n\tconst handleGeopositionRetrieval = useCallback(async () => {\n\t\ttry {\n\t\t\tconst result = await getCurrentLocation();\n\n\t\t\tsetSearchValue(result.location);\n\t\t} catch (e) {\n\t\t\tsnackbar.error(e.message);\n\t\t\t// If error is not axios related, then geolocation is not available/not allowed\n\t\t\tif (!e.isAxiosError) {\n\t\t\t\tsetGeolocationAvailability(false);\n\t\t\t}\n\t\t}\n\t}, [snackbar]);\n\n\tconst handleTabChange = useCallback((event: React.ChangeEvent<unknown>, value: number): void => {\n\t\tsetCurrentTab(value);\n\t}, []);\n\n\tconst handleChangeIndex = useCallback((index: number) => {\n\t\tsetCurrentTab(index);\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={classes.searchContainer}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<CitySearch\n\t\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\t\tsearching={isLoading}\n\t\t\t\t\t\t\tgeolocationAvailable={isGeolocationAvailable}\n\t\t\t\t\t\t\terrorMessage={errorMessage}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonSearch={handleSearch}\n\t\t\t\t\t\t\tonGetLocation={handleGeopositionRetrieval}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<Paper className={classes.graphContainer} elevation={2}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TabControls\n\t\t\t\t\t\t\tcurrentWeatherDisabled={currentWeather === null}\n\t\t\t\t\t\t\tcurrentTab={currentTab}\n\t\t\t\t\t\t\tonTabChange={handleTabChange}\n\t\t\t\t\t\t\tlargeScreen={isLargeScreen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SwipeableViews\n\t\t\t\t\t\t\taxis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n\t\t\t\t\t\t\tindex={currentTab}\n\t\t\t\t\t\t\tonChangeIndex={handleChangeIndex}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TabPanel\n\t\t\t\t\t\t\t\tid=\"forecast-panel\"\n\t\t\t\t\t\t\t\taria-labelledby=\"forecast-tab\"\n\t\t\t\t\t\t\t\tvalue={currentTab}\n\t\t\t\t\t\t\t\tindex={0}\n\t\t\t\t\t\t\t\tdir={theme.direction}\n\t\t\t\t\t\t\t\twrapperProps={{\n\t\t\t\t\t\t\t\t\tclassName: classes.chart,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ForecastGraph data={forecast} loading={isLoading} hasError={!!errorMessage} />\n\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t\t<TabPanel\n\t\t\t\t\t\t\t\tid=\"current-weather-panel\"\n\t\t\t\t\t\t\t\taria-labelledby=\"current-weather-tab\"\n\t\t\t\t\t\t\t\tvalue={currentTab}\n\t\t\t\t\t\t\t\tindex={1}\n\t\t\t\t\t\t\t\tdir={theme.direction}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{currentWeather && <CurrentWeather {...currentWeather} />}\n\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t</SwipeableViews>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</Fragment>\n\t);\n};\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n\tpageContainer: {\n\t\tflexDirection: \"column\",\n\t\twidth: \"100%\",\n\t\tminHeight: \"100vh\",\n\t\tjustifyContent: \"center\",\n\t},\n\trow: {\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\ttitle: {\n\t\ttextAlign: \"center\",\n\t\tpaddingLeft: theme.spacing(),\n\t\tpaddingRight: theme.spacing(),\n\t\t[theme.breakpoints.down(\"xl\")]: {\n\t\t\tfontSize: \"5.9rem\",\n\t\t},\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tfontSize: \"4rem\",\n\t\t},\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tfontSize: \"3.75rem\",\n\t\t},\n\t\t[theme.breakpoints.down(\"xs\")]: {\n\t\t\tfontSize: \"2.1rem\",\n\t\t},\n\t},\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { WeatherForecast } from \"@containers/weather\";\nimport useStyles from \"@containers/pages/home/home-page.styles\";\n\nconst HomePage: React.FC = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.pageContainer}>\n\t\t\t<Grid container className={classes.row}>\n\t\t\t\t<Grid item md={8} sm={10} xs={12}>\n\t\t\t\t\t<Typography className={classes.title} variant=\"h1\">\n\t\t\t\t\t\tReact Weather forecast\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container className={classes.row}>\n\t\t\t\t<Grid item md={8} sm={10} xs={12}>\n\t\t\t\t\t<WeatherForecast />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default HomePage;\n"],"sourceRoot":""}